{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\0. JP20-2\\\\Post Training\\\\reactjs\\\\JPokedex\\\\jpokedex\\\\src\\\\Pages\\\\SearchPage\\\\SearchPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { gql, useQuery } from '@apollo/client';\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\nimport './SearchPage.scss';\nimport { Card, Grid, Header, Label, Placeholder, Search, Segment } from \"semantic-ui-react\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { css } from \"@emotion/css\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchPage() {\n  _s();\n\n  const [displayPokemons, setDisplayPokemon] = useState([]);\n  const [state, dispatch] = React.useReducer(searchReducer, initialState);\n  const {\n    searchLoading,\n    results,\n    value\n  } = state;\n  const timeoutRef = React.useRef();\n  const handleSearchChange = React.useCallback((e, data) => {\n    clearTimeout(timeoutRef.current);\n    dispatch({\n      type: 'START_SEARCH',\n      query: data.value\n    });\n    timeoutRef.current = setTimeout(() => {\n      if (data.value.length === 0) {\n        dispatch({\n          type: 'CLEAN_QUERY'\n        });\n        return;\n      }\n\n      const re = new RegExp(_.escapeRegExp(data.value), 'i');\n\n      const isMatch = result => re.test(result.name);\n\n      dispatch({\n        type: 'FINISH_SEARCH',\n        results: _.filter(pokemons, isMatch)\n      });\n    }, 300);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  var maxPage;\n  const POKEMON_QUERY = gql`\n    query pokemons {\n        pokemons(limit: 999999, offset: 0) {\n          count\n          next\n          previous\n          status\n          message\n          results {\n            url\n            name\n            image\n          }\n        }\n      }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(POKEMON_QUERY, {});\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`\n            display:flex;\n            align-items:center;\n            justify-content:center;\n            padding: 1% 0;\n            background-color: #1b1c1d;\n        `,\n      children: [\"  \", /*#__PURE__*/_jsxDEV(Search, {\n        onClick: () => {},\n        size: \"tiny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      doubling: true,\n      itemsPerRow: 8,\n      className: \"card-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  maxPage = Math.round(data.pokemons.count / 18);\n  console.log(maxPage);\n  console.log(data);\n  let pokemons = data.pokemons.results;\n  let searchValue = '';\n  const initialState = {\n    searchLoading: false,\n    results: [],\n    value: ''\n  };\n\n  function searchReducer(state, action) {\n    switch (action.type) {\n      case 'CLEAN_QUERY':\n        return initialState;\n\n      case 'START_SEARCH':\n        return { ...state,\n          searchLoading: true,\n          value: action.query\n        };\n\n      case 'FINISH_SEARCH':\n        return { ...state,\n          searchLoading: false,\n          results: action.results\n        };\n\n      case 'UPDATE_SELECTION':\n        return { ...state,\n          value: action.selection\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const resultRenderer = ({\n    name\n  }) => /*#__PURE__*/_jsxDEV(Label, {\n    content: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 44\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: css`\n                display:flex;\n                align-items:center;\n                justify-content:center;\n                padding: 1% 0;\n                background-color: #1b1c1d;\n            `,\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        loading: loading,\n        onResultSelect: (e, data) => dispatch({\n          type: 'UPDATE_SELECTION',\n          selection: data.result.name\n        }),\n        onSearchChange: handleSearchChange,\n        resultRenderer: resultRenderer,\n        results: results,\n        value: value,\n        size: \"tiny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      doubling: true,\n      itemsPerRow: 8,\n      className: \"card-container\",\n      children: displayPokemons === null || displayPokemons === void 0 ? void 0 : displayPokemons.map(pokemon => {\n        return /*#__PURE__*/_jsxDEV(PokemonCard, {\n          pokemon: pokemon\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SearchPage, \"yDcEIXonFKfEmrGLZOa8OnoWM+o=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/src/Pages/SearchPage/SearchPage.jsx"],"names":["React","useState","useEffect","gql","useQuery","PokemonCard","Card","Grid","Header","Label","Placeholder","Search","Segment","css","_","SearchPage","displayPokemons","setDisplayPokemon","state","dispatch","useReducer","searchReducer","initialState","searchLoading","results","value","timeoutRef","useRef","handleSearchChange","useCallback","e","data","clearTimeout","current","type","query","setTimeout","length","re","RegExp","escapeRegExp","isMatch","result","test","name","filter","pokemons","maxPage","POKEMON_QUERY","loading","error","Math","round","count","console","log","searchValue","action","selection","Error","resultRenderer","map","pokemon"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\"\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './SearchPage.scss';\r\nimport { Card,  Grid,  Header,  Label,  Placeholder, Search, Segment } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { css } from \"@emotion/css\";\r\nimport _ from \"lodash\";\r\nfunction SearchPage(){\r\n\r\n    \r\n    const [displayPokemons, setDisplayPokemon]=useState([]);\r\n          \r\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\r\n    const { searchLoading, results, value } = state\r\n    \r\n    const timeoutRef = React.useRef()\r\n    const handleSearchChange = React.useCallback((e, data) => {\r\n      clearTimeout(timeoutRef.current)\r\n      dispatch({ type: 'START_SEARCH', query: data.value })\r\n  \r\n      timeoutRef.current = setTimeout(() => {\r\n        if (data.value.length === 0) {\r\n          dispatch({ type: 'CLEAN_QUERY' })\r\n          return\r\n        }\r\n  \r\n        const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n        const isMatch = (result) => re.test(result.name)\r\n        \r\n            \r\n        dispatch({\r\n          type: 'FINISH_SEARCH',\r\n          results: _.filter(pokemons, isMatch),\r\n        })\r\n      }, 300)\r\n    }, [])\r\n    React.useEffect(() => {\r\n      return () => {\r\n        clearTimeout(timeoutRef.current)\r\n      }\r\n    }, [])\r\n  \r\n    var maxPage;\r\n\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons {\r\n        pokemons(limit: 999999, offset: 0) {\r\n          count\r\n          next\r\n          previous\r\n          status\r\n          message\r\n          results {\r\n            url\r\n            name\r\n            image\r\n          }\r\n        }\r\n      }\r\n    `\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n\r\n    })\r\n\r\n    if(loading)return <div id=\"list-page\">\r\n   <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n        `}>  <Search\r\n         onClick={()=>{}}\r\n        size=\"tiny\"\r\n\r\n         /></div>\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n\r\n    </Card.Group>\r\n\r\n\r\n</div>\r\n\r\n    maxPage=Math.round(data.pokemons.count/18);\r\n    console.log(maxPage);\r\n    console.log(data);\r\n    let pokemons=data.pokemons.results;\r\n    \r\n    let searchValue=''\r\n    const initialState = {\r\n        searchLoading: false,\r\n        results: [],\r\n        value: '',\r\n    };\r\n    function searchReducer(state, action) {\r\n        switch (action.type) {\r\n          case 'CLEAN_QUERY':\r\n            return initialState\r\n          case 'START_SEARCH':\r\n            return { ...state, searchLoading: true, value: action.query }\r\n          case 'FINISH_SEARCH':\r\n            return { ...state, searchLoading: false, results: action.results }\r\n          case 'UPDATE_SELECTION':\r\n            return { ...state, value: action.selection }\r\n          default:\r\n            throw new Error()\r\n        }\r\n      }\r\n      const resultRenderer = ({ name }) => <Label content={name} />\r\n\r\n   \r\n\r\n  \r\n        \r\n    \r\n  \r\n  \r\n      \r\n\r\n\r\n    return (\r\n        \r\n        <div id=\"list-page\">\r\n            <div className={css`\r\n                display:flex;\r\n                align-items:center;\r\n                justify-content:center;\r\n                padding: 1% 0;\r\n                background-color: #1b1c1d;\r\n            `}>\r\n                \r\n            <Search\r\n                loading={loading}\r\n                onResultSelect={(e, data) =>\r\n                dispatch({ type: 'UPDATE_SELECTION', selection: data.result.name })\r\n                }\r\n                onSearchChange={handleSearchChange}\r\n                resultRenderer={resultRenderer}\r\n                results={results}\r\n                value={value}\r\n                \r\n                \r\n                size=\"tiny\"\r\n            />\r\n\r\n            </div>    \r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {displayPokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>\r\n                })}\r\n            </Card.Group>\r\n            \r\n        </div>\r\n        \r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchPage"]},"metadata":{},"sourceType":"module"}