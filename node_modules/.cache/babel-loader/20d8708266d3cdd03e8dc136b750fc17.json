{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\0. JP20-2\\\\Post Training\\\\reactjs\\\\JPokedex\\\\jpokedex\\\\src\\\\Pages\\\\PokemonDetailPage\\\\PokemonDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport './PokemonDetail.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PokemonDetail() {\n  _s();\n\n  let {\n    name\n  } = useParams(); // const [pokemon,setPokemon]=useState();\n\n  const POKEMON_QUERY = gql`\n      query pokemon($name: String!) {\n          pokemon(name: $name) {\n            id\n            name\n            sprites {\n              front_default\n              front_shiny\n            }\n            moves {\n              move {\n                name\n              }\n            }\n            types {\n              type {\n                name\n              }\n            }\n          }\n        }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(POKEMON_QUERY, {\n    variables: {\n      name: name\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"asdfsafs\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n  let pokemon = data;\n  console.log(pokemon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PokemonDetail, \"9cgjeRHg2EuMgaAvRO4EpuMrvlo=\", false, function () {\n  return [useParams, useQuery];\n});\n\n_c = PokemonDetail;\nexport default PokemonDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonDetail\");","map":{"version":3,"sources":["C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/src/Pages/PokemonDetailPage/PokemonDetail.jsx"],"names":["gql","useQuery","useEffect","useState","useParams","PokemonDetail","name","POKEMON_QUERY","loading","error","data","variables","pokemon","console","log"],"mappings":";;;AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,sBAAP;;;AAEA,SAASC,aAAT,GAAwB;AAAA;;AACpB,MAAG;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAnB,CADoB,CAEpB;;AAEA,QAAMG,aAAa,GAACP,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KArBI;AAsBA,QAAK;AAACQ,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAuBT,QAAQ,CAACM,aAAD,EAAe;AACjDI,IAAAA,SAAS,EAAC;AACNL,MAAAA,IAAI,EAACA;AADC;AADuC,GAAf,CAApC;AAMA,MAAGE,OAAH,EAAW,oBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAOX,MAAII,OAAO,GAACF,IAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AASH;;GAlDQP,a;UACKD,S,EAyBkBH,Q;;;KA1BvBI,a;AAoDT,eAAeA,aAAf","sourcesContent":["\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport './PokemonDetail.scss';\r\n\r\nfunction PokemonDetail(){\r\n    let{name}=useParams();\r\n    // const [pokemon,setPokemon]=useState();\r\n    \r\n    const POKEMON_QUERY=gql`\r\n      query pokemon($name: String!) {\r\n          pokemon(name: $name) {\r\n            id\r\n            name\r\n            sprites {\r\n              front_default\r\n              front_shiny\r\n            }\r\n            moves {\r\n              move {\r\n                name\r\n              }\r\n            }\r\n            types {\r\n              type {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    `;\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n      variables:{\r\n          name:name\r\n      }\r\n    });\r\n    \r\n    if(loading)return(\r\n      <div>\r\n        asdfsafs\r\n      </div>\r\n    );\r\n\r\n      \r\n    let pokemon=data;\r\n    console.log(pokemon);\r\n    return(\r\n      <div>\r\n        \r\n      \r\n      \r\n      </div>\r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default PokemonDetail\r\n\r\n"]},"metadata":{},"sourceType":"module"}