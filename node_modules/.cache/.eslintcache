[{"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\index.js":"1","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\App.js":"3","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Components\\PokemonCard\\PokemonCard.jsx":"4","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Entry.jsx":"5","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Mobile.jsx":"6","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Desktop.jsx":"7","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\ListPage\\ListPage.jsx":"8","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\SearchPage\\SearchPage.jsx":"9","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PokemonDetailPage\\PokemonDetail.jsx":"10","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\FavPage\\FavPage.jsx":"11"},{"size":777,"mtime":1626526053410,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1626519590847,"results":"14","hashOfConfig":"13"},{"size":222,"mtime":1627050256335,"results":"15","hashOfConfig":"13"},{"size":3023,"mtime":1626843397324,"results":"16","hashOfConfig":"13"},{"size":675,"mtime":1627050322223,"results":"17","hashOfConfig":"13"},{"size":2065,"mtime":1627050343645,"results":"18","hashOfConfig":"13"},{"size":2741,"mtime":1627050311756,"results":"19","hashOfConfig":"13"},{"size":3743,"mtime":1627050301209,"results":"20","hashOfConfig":"13"},{"size":5809,"mtime":1626842611724,"results":"21","hashOfConfig":"13"},{"size":8475,"mtime":1627050369747,"results":"22","hashOfConfig":"13"},{"size":2129,"mtime":1627050277868,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1r50dyw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\index.js",[],["51","52"],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\App.js",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Components\\PokemonCard\\PokemonCard.jsx",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Entry.jsx",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Mobile.jsx",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Desktop.jsx",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\ListPage\\ListPage.jsx",["53","54","55"],"import React,{useState} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './ListPage.scss';\r\nimport { Card, Pagination} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { css } from \"@emotion/css\";\r\nfunction ListPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons($limit: Int, $offset: Int){\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={1}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={1}\r\n                onPageChange={(e,page)=>{}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n\r\n</div>;\r\n\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                })}\r\n            </Card.Group>\r\n\r\n\r\n\r\n            <div  className={\"center-flex \" + css`display:flex; align-items:flex-start;height:20vh;`}>\r\n            <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={page}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={3}\r\n                onPageChange={(e,page)=>{\r\n                    setPage(page.activePage);}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ListPage\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\SearchPage\\SearchPage.jsx",["56","57","58","59","60","61","62","63"],"import React,{useState, useEffect} from \"react\"\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './SearchPage.scss';\r\nimport { Card,  Grid,  Header,  Icon,  Image,  Label,  Placeholder, Search, Segment } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { css } from \"@emotion/css\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nfunction SearchPage(){\r\n\r\n    \r\n    const [displayPokemons, setDisplayPokemon]=useState([]);\r\n    \r\n    var maxPage;\r\n    let searchString='';\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons {\r\n        pokemons(limit: 999999, offset: 0) {\r\n          count\r\n          next\r\n          previous\r\n          status\r\n          message\r\n          results {\r\n            url\r\n            name\r\n            image\r\n          }\r\n        }\r\n      }\r\n    `\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n\r\n    })\r\n\r\n    if(loading)return <div id=\"list-page\" >\r\n     <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n            width:100%;\r\n\r\n            \r\n        `}>\r\n            <div className={css`\r\n            display:flex;                    \r\n            align-items:center;\r\n            justify-content:flex-end;\r\n            padding: 1% 0;\r\n        `}>\r\n                <Search\r\n                onClick={()=>{}}\r\n                icon={null}\r\n                size=\"small\"/>\r\n                <div className={css`\r\n                    position:absolute;\r\n                `}>\r\n                    <Icon \r\n                    className={css`cursor:pointer;`}\r\n                    onClick={()=>{\r\n                        setDisplayPokemon(pokemons.filter((pokemon)=>{\r\n                            return pokemon.name.includes(searchString);\r\n                        }));\r\n                    }} name='search'/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n</div>\r\n    \r\n   \r\n    maxPage=Math.round(data.pokemons.count/18);\r\n    console.log(maxPage);\r\n    console.log(data);\r\n    let pokemons=data.pokemons.results;\r\n    let searchValue=''\r\n    const initialState = {\r\n        loading: false,\r\n        results: [],\r\n        value: '',\r\n    };\r\n    function searchReducer(state, action) {\r\n        switch (action.type) {\r\n          case 'CLEAN_QUERY':\r\n            return initialState\r\n          case 'START_SEARCH':\r\n            return { ...state, loading: true, value: action.query }\r\n          case 'FINISH_SEARCH':\r\n            return { ...state, loading: false, results: action.results }\r\n          case 'UPDATE_SELECTION':\r\n            searchString=action.selection;\r\n      \r\n            return { ...state, value: action.selection }\r\n          default:\r\n            throw new Error()\r\n        }\r\n      }\r\n      const resultRenderer = ({ name }) => <Label content={name} />\r\n      \r\n    function SearchPokemon() {\r\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\r\n    const { loading, results, value } = state\r\n    \r\n    const timeoutRef = React.useRef()\r\n    const handleSearchChange = React.useCallback((e, data) => {\r\n      clearTimeout(timeoutRef.current)\r\n      searchString=data.value;\r\n      dispatch({ type: 'START_SEARCH', query: data.value })\r\n  \r\n      timeoutRef.current = setTimeout(() => {\r\n        if (data.value.length === 0) {\r\n          dispatch({ type: 'CLEAN_QUERY' })\r\n          return\r\n        }\r\n  \r\n        const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n        const isMatch = (result) => re.test(result.name)\r\n  \r\n        dispatch({\r\n          type: 'FINISH_SEARCH',\r\n          results: _.filter(pokemons, isMatch),\r\n        })\r\n      }, 300)\r\n    }, [])\r\n    React.useEffect(() => {\r\n      return () => {\r\n        clearTimeout(timeoutRef.current)\r\n      }\r\n    }, [])\r\n  \r\n    return (\r\n        <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n            width:100%;\r\n\r\n        `}>\r\n            <div className={css`\r\n            display:flex;                    \r\n            align-items:center;\r\n            justify-content:flex-end;\r\n            padding: 1% 0;\r\n        `}>\r\n                <Search\r\n                loading={loading}\r\n                onResultSelect={(e, data) =>dispatch({ type: 'UPDATE_SELECTION', selection: data.result.name })}\r\n                onSearchChange={handleSearchChange}\r\n                resultRenderer={resultRenderer}\r\n                results={results}\r\n                value={value}\r\n                icon={null}\r\n                size=\"small\"/>\r\n                <div className={css`\r\n                    position:absolute;\r\n                `}>\r\n                    <Icon \r\n                    className={css`cursor:pointer;`}\r\n                    onClick={()=>{\r\n                        setDisplayPokemon(pokemons.filter((pokemon)=>{\r\n                            return pokemon.name.includes(searchString);\r\n                        }));\r\n                    }} name='search'/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n        \r\n    )\r\n  }\r\n\r\n\r\n    return (\r\n        \r\n        <div id=\"list-page\">\r\n            <SearchPokemon/>            \r\n            <Card.Group doubling itemsPerRow={8} className={\"card-container \"+css`\r\n              height:100vw;\r\n              \r\n              `}>\r\n                {displayPokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n        \r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchPage","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PokemonDetailPage\\PokemonDetail.jsx",["64","65","66"],"\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { css } from '@emotion/css';\r\nimport {  useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport {  Header,  Table } from 'semantic-ui-react';\r\nimport './PokemonDetail.scss';\r\n\r\nfunction PokemonDetail(){\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    let{name}=useParams();\r\n    // const [pokemon,setPokemon]=useState();\r\n\r\n    const POKEMON_QUERY=gql`\r\n      query pokemon($name: String!) {\r\n          pokemon(name: $name) {\r\n            id\r\n            name\r\n            types{\r\n              type{\r\n                name\r\n              }\r\n            }\r\n            \r\n\t\theight\r\n    weight\r\n    abilities{\r\n      ability{\r\n        name\r\n      }\r\n    }\r\n            sprites {\r\n              front_default\r\n              front_shiny\r\n              back_default\r\n              back_shiny\r\n            }        \r\n            stats{\r\n              base_stat\r\n\r\n              stat{\r\n                name\r\n              }\r\n              \r\n            }\r\n            moves {\r\n              move {\r\n                name\r\n              }\r\n            }\r\n            types {\r\n              type {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    `;\r\n    const{loading , error, data}=useQuery(POKEMON_QUERY,{\r\n      variables:{\r\n          name:name\r\n      }\r\n    });\r\n    \r\n\r\n    // var mobile = (width <= 768);\r\n    if(loading)return(\r\n      <div></div>\r\n    );\r\n    console.log(data);\r\n    let pokemon=data.pokemon;\r\n    return(\r\n      <div className={css`\r\n        display:flex;\r\n        width:100%;\r\n        height:100%;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        justify-content:center;\r\n      `}>\r\n        \r\n        <div className=\"image-container\">\r\n          <img src={pokemon.sprites.front_default} alt=\"Failed to load\" />\r\n          <img src={pokemon.sprites.front_shiny} alt=\"Failed to load\" />\r\n        </div>\r\n      <div className=\"tables-container\">\r\n        <Table celled>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell><h3>Attributes</h3></Table.HeaderCell>\r\n                <Table.HeaderCell><h3>Description</h3></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' image >\r\n                        \r\n                    <Header.Content>\r\n                      <h3>Pokemon</h3>\r\n                      \r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                <h3 className={css`display:flex;`}>{pokemon.name}\r\n                              {pokemon.types?.map((type)=>{\r\n                            return (\r\n                            <div className={type.type.name+' '+css`\r\n                              padding: 0 2vw;\r\n                              display:flex;\r\n                              color:var(--txt-sec);\r\n                              justify-content:center;\r\n                              \r\n                              margin: 0 0 0 5px ;\r\n                              font-size:min(max(0.8rem, 2vw), 18px);\r\n                            `}>\r\n\r\n                              {type.type.name}\r\n                            </div>)\r\n                        })}\r\n                      </h3>\r\n                  </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4'>\r\n                    <Header.Content>\r\n                      <h3>\r\n                        Abilities\r\n                      </h3>\r\n\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                <h3 className={css`display:flex;`}>\r\n                              {pokemon.abilities?.map((ability)=>{\r\n                            return (\r\n                            <div className={css`\r\n                              padding: 0 2vw;\r\n                              display:flex;\r\n                              background-color:var(--bg-surface);\r\n                              justify-content:center;\r\n                              margin: 0 5px 0 0 ;\r\n                              font-size:min(max(0.6rem, 1.6vw), 14px);\r\n\r\n                            `}>\r\n                              {ability.ability.name} \r\n                            </div>)\r\n                        })}\r\n                      </h3>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4' >\r\n                    <Header.Content>\r\n                    <h3>Height</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.height}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>Weight</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.weight}</h3></Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n          <Table celled >\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell><h3>Stats</h3></Table.HeaderCell>\r\n                <Table.HeaderCell><h3>Value</h3></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' image >\r\n                        \r\n                    <Header.Content>\r\n                      <h3>{pokemon.stats[0].stat.name}</h3>\r\n                      \r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[0].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4'>\r\n                    <Header.Content>\r\n                      <h3>\r\n                      {pokemon.stats[1].stat.name}\r\n                      </h3>\r\n\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[1].base_stat}</h3>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[2].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[2].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[3].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[3].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[4].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[4].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[5].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[5].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n          <div className={css`\r\n            \r\n          `}>\r\n          </div>\r\n        </div>\r\n        \r\n        </div>\r\n    );  \r\n    \r\n}\r\n\r\nexport default PokemonDetail\r\n\r\n","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\FavPage\\FavPage.jsx",["67","68","69","70"],"import React,{useState} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './FavPage.scss';\r\nimport { Card} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nfunction FavPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons{\r\n        pokemons(limit: 9999, offset: 0) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n    function test(){\r\n        var row=[];\r\n    \r\n        for(let i=0;i<localStorage.length;i++){\r\n        \r\n            row.push(<PokemonCard pokemon='loading'/>);\r\n        }\r\n        return row;\r\n    }\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    {\r\n        test()\r\n    }\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    \r\n        </div>\r\n\r\n</div>;\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    let temp=localStorage.getItem(pokemon.name);\r\n                    \r\n                    if(temp!=null){\r\n                        return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                    }\r\n                    else {\r\n                        <>;</>\r\n                    }\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default FavPage\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":32,"column":20,"nodeType":"77","messageId":"78","endLine":32,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":90,"column":14,"nodeType":"77","messageId":"78","endLine":90,"endColumn":22},{"ruleId":"75","severity":1,"message":"80","line":94,"column":14,"nodeType":"77","messageId":"78","endLine":94,"endColumn":22},{"ruleId":"75","severity":1,"message":"81","line":1,"column":25,"nodeType":"77","messageId":"78","endLine":1,"endColumn":34},{"ruleId":"75","severity":1,"message":"82","line":6,"column":17,"nodeType":"77","messageId":"78","endLine":6,"endColumn":21},{"ruleId":"75","severity":1,"message":"83","line":6,"column":24,"nodeType":"77","messageId":"78","endLine":6,"endColumn":30},{"ruleId":"75","severity":1,"message":"84","line":6,"column":40,"nodeType":"77","messageId":"78","endLine":6,"endColumn":45},{"ruleId":"75","severity":1,"message":"85","line":6,"column":56,"nodeType":"77","messageId":"78","endLine":6,"endColumn":67},{"ruleId":"75","severity":1,"message":"86","line":6,"column":77,"nodeType":"77","messageId":"78","endLine":6,"endColumn":84},{"ruleId":"75","severity":1,"message":"76","line":36,"column":20,"nodeType":"77","messageId":"78","endLine":36,"endColumn":25},{"ruleId":"75","severity":1,"message":"87","line":82,"column":9,"nodeType":"77","messageId":"78","endLine":82,"endColumn":20},{"ruleId":"75","severity":1,"message":"88","line":10,"column":12,"nodeType":"77","messageId":"78","endLine":10,"endColumn":17},{"ruleId":"75","severity":1,"message":"89","line":10,"column":19,"nodeType":"77","messageId":"78","endLine":10,"endColumn":27},{"ruleId":"75","severity":1,"message":"76","line":60,"column":21,"nodeType":"77","messageId":"78","endLine":60,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":31,"column":20,"nodeType":"77","messageId":"78","endLine":31,"endColumn":25},{"ruleId":"75","severity":1,"message":"79","line":60,"column":14,"nodeType":"77","messageId":"78","endLine":60,"endColumn":22},{"ruleId":"75","severity":1,"message":"80","line":64,"column":14,"nodeType":"77","messageId":"78","endLine":64,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":72,"column":39,"nodeType":"92","messageId":"93","endLine":72,"endColumn":41},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'nextPage' is defined but never used.","'prevPage' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","'Placeholder' is defined but never used.","'Segment' is defined but never used.","'searchValue' is assigned a value but never used.","'width' is assigned a value but never used.","'setWidth' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]