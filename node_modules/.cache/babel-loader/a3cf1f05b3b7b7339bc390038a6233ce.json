{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject,_templateObject2;import React,{useState}from\"react\";import{gql,useQuery}from'@apollo/client';import PokemonCard from\"../../Components/PokemonCard/PokemonCard\";import'./ListPage.scss';import{Card,Pagination}from\"semantic-ui-react\";import'semantic-ui-css/semantic.min.css';import{css}from\"@emotion/css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ListPage(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var maxPage;var POKEMON_QUERY=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    query pokemons($limit: Int, $offset: Int){\\n        pokemons(limit: $limit, offset: $offset) {\\n            count\\n            next\\n            previous\\n            status\\n            message\\n            results {\\n              url\\n              name\\n              image\\n            }\\n          }\\n      }\\n    \"])));var _useQuery=useQuery(POKEMON_QUERY,{variables:{limit:30,offset:page*30}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;if(loading)return/*#__PURE__*/_jsxs(\"div\",{id:\"list-page\",children:[/*#__PURE__*/_jsxs(Card.Group,{doubling:true,itemsPerRow:8,className:\"card-container\",children:[/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}),/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"center-flex\",children:/*#__PURE__*/_jsx(Pagination,{boundaryRange:0,defaultActivePage:1,ellipsisItem:null,firstItem:null,lastItem:null,siblingRange:1,onPageChange:function onPageChange(e,page){},totalPages:maxPage})})]});maxPage=Math.round(data.pokemons.count/30);var pokemons=data.pokemons.results;function nextPage(){if(page<maxPage)setPage(page+1);}function prevPage(){if(page>0)setPage(page+1);}return/*#__PURE__*/_jsxs(\"div\",{id:\"list-page\",children:[/*#__PURE__*/_jsx(Card.Group,{doubling:true,itemsPerRow:8,className:\"card-container\",children:pokemons===null||pokemons===void 0?void 0:pokemons.map(function(pokemon){return/*#__PURE__*/_jsx(PokemonCard,{pokemon:pokemon},pokemon.name);})}),/*#__PURE__*/_jsx(\"div\",{className:\"center-flex \"+css(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"display:flex; align-items:flex-start;height:20vh;\"]))),children:/*#__PURE__*/_jsx(Pagination,{boundaryRange:0,defaultActivePage:page,ellipsisItem:null,firstItem:null,lastItem:null,siblingRange:3,onPageChange:function onPageChange(e,page){setPage(page.activePage);},totalPages:maxPage})})]});}export default ListPage;","map":{"version":3,"sources":["C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/src/Pages/ListPage/ListPage.jsx"],"names":["React","useState","gql","useQuery","PokemonCard","Card","Pagination","css","ListPage","page","setPage","maxPage","POKEMON_QUERY","variables","limit","offset","loading","error","data","e","Math","round","pokemons","count","results","nextPage","prevPage","map","pokemon","name","activePage"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './ListPage.scss';\r\nimport { Card, Pagination} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { css } from \"@emotion/css\";\r\nfunction ListPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons($limit: Int, $offset: Int){\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={1}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={1}\r\n                onPageChange={(e,page)=>{}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n\r\n</div>;\r\n\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                })}\r\n            </Card.Group>\r\n\r\n\r\n\r\n            <div  className={\"center-flex \" + css`display:flex; align-items:flex-start;height:20vh;`}>\r\n            <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={page}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={3}\r\n                onPageChange={(e,page)=>{\r\n                    setPage(page.activePage);}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ListPage\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}