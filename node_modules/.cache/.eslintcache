[{"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\index.js":"1","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\App.js":"3","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Components\\PokemonCard\\PokemonCard.jsx":"4","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Entry.jsx":"5","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Mobile.jsx":"6","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Desktop.jsx":"7","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\ListPage\\ListPage.jsx":"8","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\SearchPage\\SearchPage.jsx":"9","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PokemonDetailPage\\PokemonDetail.jsx":"10","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\FavPage\\FavPage.jsx":"11"},{"size":777,"mtime":1626526053410,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1626519590847,"results":"14","hashOfConfig":"13"},{"size":237,"mtime":1626666669458,"results":"15","hashOfConfig":"13"},{"size":3023,"mtime":1626843397324,"results":"16","hashOfConfig":"13"},{"size":798,"mtime":1626667452936,"results":"17","hashOfConfig":"13"},{"size":2168,"mtime":1626844061265,"results":"18","hashOfConfig":"13"},{"size":2748,"mtime":1626844014750,"results":"19","hashOfConfig":"13"},{"size":3811,"mtime":1626837427230,"results":"20","hashOfConfig":"13"},{"size":5809,"mtime":1626842611724,"results":"21","hashOfConfig":"13"},{"size":8598,"mtime":1626837244029,"results":"22","hashOfConfig":"13"},{"size":2246,"mtime":1626845054733,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1r50dyw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\index.js",[],["55","56"],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\App.js",["57","58"],"import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Entry from './Pages/PageEntry/Entry';\n\nfunction App() {\n  return (\n    <Router>\n      <Entry/>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Components\\PokemonCard\\PokemonCard.jsx",[],"C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Entry.jsx",["59","60","61","62","63","64","65"],"import { Button, Container, Menu, Segment, Visibility } from \"semantic-ui-react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { css, cx } from '@emotion/css'\r\nimport Mobile from \"./Mobile\";\r\nimport Desktop from \"./Desktop\";\r\n\r\nfunction Entry(){\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n\r\n    let isMobile = (width <= 768);\r\n    return (\r\n    <div>\r\n        {isMobile?\r\n           <Mobile/>\r\n \r\n        :<Desktop/>}\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Entry","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Mobile.jsx",["66","67","68","69","70","71"],"import { css, cx } from '@emotion/css'\r\nimport { useState } from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { Link, Route, Router, Switch } from 'react-router-dom';\r\nimport { Button, Container, Icon, Menu, Segment, Sidebar } from \"semantic-ui-react\";\r\nimport FavPage from '../FavPage/FavPage';\r\nimport ListPage from '../ListPage/ListPage';\r\nimport PokemonDetail from '../PokemonDetailPage/PokemonDetail';\r\nimport SearchPage from '../SearchPage/SearchPage';\r\n\r\n\r\n\r\nfunction Mobile(){\r\n\r\n    const [sidebarOpened,setSidebar]=useState(false);\r\n\r\n    function handleSidebarHide ()  {\r\n        setSidebar(false)\r\n    }\r\n\r\n    function handleToggle ()  {\r\n        setSidebar(true)\r\n    }\r\n    return (\r\n      \r\n      <Sidebar.Pushable>\r\n      \r\n       <Sidebar\r\n       as={Menu}\r\n       animation='overlay'\r\n       inverted\r\n       onHide={handleSidebarHide}\r\n       vertical\r\n       visible={sidebarOpened}\r\n       width='thin'\r\n       \r\n\r\n       \r\n     >\r\n\r\n       <Menu.Item as='a' href='./'>List</Menu.Item>\r\n       <Menu.Item as='a' href='./search'>Search</Menu.Item>        \r\n       <Menu.Item as='a' href='./favorites'>Favorites</Menu.Item>\r\n     </Sidebar>\r\n\r\n     \r\n\r\n     <Sidebar.Pusher dimmed={sidebarOpened}>\r\n       <Segment\r\n         inverted\r\n         textAlign='center'\r\n         style={{ minHeight: 80, padding: '1em 0em' }}\r\n         vertical\r\n         color='black'\r\n       >\r\n         <Container>\r\n           <Menu inverted pointing secondary size='large'>\r\n\r\n             <Menu.Item onClick={handleToggle}>\r\n             <Icon name='sidebar' />\r\n             </Menu.Item>\r\n\r\n           </Menu>\r\n         </Container>\r\n       </Segment>\r\n         <Switch>\r\n\r\n         <Route path='/favourites'>\r\n           \r\n           <FavPage/>\r\n         </Route>\r\n         <Route path='/pokemon/:name'>\r\n           <PokemonDetail/>\r\n           \r\n         </Route>\r\n         <Route path='/search'>\r\n         \r\n           <SearchPage/>\r\n        \r\n\r\n         </Route>\r\n         <Route path='/'>\r\n           <ListPage/>\r\n         </Route>\r\n       </Switch>\r\n     </Sidebar.Pusher>\r\n   </Sidebar.Pushable>\r\n   \r\n    \r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Mobile","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PageEntry\\Desktop.jsx",["72"],"import { useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport { Button, Container, Menu, Segment, Visibility } from \"semantic-ui-react\";\r\nimport FavPage from \"../FavPage/FavPage\";\r\nimport ListPage from \"../ListPage/ListPage\";\r\nimport PokemonDetail from \"../PokemonDetailPage/PokemonDetail\";\r\nimport SearchPage from \"../SearchPage/SearchPage\";\r\n\r\n\r\nfunction Desktop(){\r\n\r\n    const [fixed,setFixed]=useState(false);\r\n\r\n    function hideFixedMenu ()  {\r\n        setFixed(false)\r\n        \r\n    }\r\n\r\n    function showFixedMenu ()  {\r\n        setFixed(true)\r\n        \r\n    }\r\n    return (\r\n    <div>\r\n      <Visibility\r\n      once={false}\r\n      onBottomPassed={showFixedMenu}\r\n      onBottomPassedReverse={hideFixedMenu}\r\n    >\r\n      <Segment\r\n        inverted\r\n        textAlign='center'\r\n        style={{ minHeight: 80, padding: '1em 0em' }}\r\n        vertical\r\n      >\r\n        <Menu\r\n          fixed={fixed ? 'top' : null}\r\n          inverted={!fixed}\r\n          pointing={!fixed}\r\n          secondary={!fixed}\r\n          size='large'\r\n        >\r\n          <Container>\r\n            <Switch>\r\n              \r\n            <Route path='/pokemon'>\r\n              <Menu.Item as='a' href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            <Route path='/favorites'>\r\n              <Menu.Item as='a' href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' active href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            <Route path='/search'>\r\n              <Menu.Item as='a' href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' active href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            <Route path='/'>\r\n              <Menu.Item as='a' active href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            \r\n          </Switch>\r\n          </Container>\r\n        </Menu>\r\n      </Segment>\r\n      \r\n    </Visibility>\r\n      <Switch>\r\n          <Route path='/favorites'>\r\n            <FavPage/>\r\n          </Route>\r\n          <Route path='/pokemon/:name'>\r\n            <PokemonDetail/>\r\n          </Route>\r\n          <Route path='/search'>\r\n            <SearchPage/>\r\n          </Route>\r\n          <Route path='/'>\r\n            <ListPage/>\r\n          </Route>\r\n          \r\n        </Switch>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Desktop","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\ListPage\\ListPage.jsx",["73","74","75","76","77","78","79","80","81","82"],"import React,{useState, useEffect} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './ListPage.scss';\r\nimport { Card,  Grid,  Header,  Label,  Pagination,  Placeholder, Search, Segment } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { css } from \"@emotion/css\";\r\nfunction ListPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons($limit: Int, $offset: Int){\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={1}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={1}\r\n                onPageChange={(e,page)=>{}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n\r\n</div>;\r\n\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                })}\r\n            </Card.Group>\r\n\r\n\r\n\r\n            <div  className={\"center-flex \" + css`display:flex; align-items:flex-start;height:20vh;`}>\r\n            <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={page}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={3}\r\n                onPageChange={(e,page)=>{\r\n                    setPage(page.activePage);}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ListPage\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\SearchPage\\SearchPage.jsx",["83","84","85","86","87","88","89","90"],"import React,{useState, useEffect} from \"react\"\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './SearchPage.scss';\r\nimport { Card,  Grid,  Header,  Icon,  Image,  Label,  Placeholder, Search, Segment } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { css } from \"@emotion/css\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nfunction SearchPage(){\r\n\r\n    \r\n    const [displayPokemons, setDisplayPokemon]=useState([]);\r\n    \r\n    var maxPage;\r\n    let searchString='';\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons {\r\n        pokemons(limit: 999999, offset: 0) {\r\n          count\r\n          next\r\n          previous\r\n          status\r\n          message\r\n          results {\r\n            url\r\n            name\r\n            image\r\n          }\r\n        }\r\n      }\r\n    `\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n\r\n    })\r\n\r\n    if(loading)return <div id=\"list-page\" >\r\n     <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n            width:100%;\r\n\r\n            \r\n        `}>\r\n            <div className={css`\r\n            display:flex;                    \r\n            align-items:center;\r\n            justify-content:flex-end;\r\n            padding: 1% 0;\r\n        `}>\r\n                <Search\r\n                onClick={()=>{}}\r\n                icon={null}\r\n                size=\"small\"/>\r\n                <div className={css`\r\n                    position:absolute;\r\n                `}>\r\n                    <Icon \r\n                    className={css`cursor:pointer;`}\r\n                    onClick={()=>{\r\n                        setDisplayPokemon(pokemons.filter((pokemon)=>{\r\n                            return pokemon.name.includes(searchString);\r\n                        }));\r\n                    }} name='search'/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n</div>\r\n    \r\n   \r\n    maxPage=Math.round(data.pokemons.count/18);\r\n    console.log(maxPage);\r\n    console.log(data);\r\n    let pokemons=data.pokemons.results;\r\n    let searchValue=''\r\n    const initialState = {\r\n        loading: false,\r\n        results: [],\r\n        value: '',\r\n    };\r\n    function searchReducer(state, action) {\r\n        switch (action.type) {\r\n          case 'CLEAN_QUERY':\r\n            return initialState\r\n          case 'START_SEARCH':\r\n            return { ...state, loading: true, value: action.query }\r\n          case 'FINISH_SEARCH':\r\n            return { ...state, loading: false, results: action.results }\r\n          case 'UPDATE_SELECTION':\r\n            searchString=action.selection;\r\n      \r\n            return { ...state, value: action.selection }\r\n          default:\r\n            throw new Error()\r\n        }\r\n      }\r\n      const resultRenderer = ({ name }) => <Label content={name} />\r\n      \r\n    function SearchPokemon() {\r\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\r\n    const { loading, results, value } = state\r\n    \r\n    const timeoutRef = React.useRef()\r\n    const handleSearchChange = React.useCallback((e, data) => {\r\n      clearTimeout(timeoutRef.current)\r\n      searchString=data.value;\r\n      dispatch({ type: 'START_SEARCH', query: data.value })\r\n  \r\n      timeoutRef.current = setTimeout(() => {\r\n        if (data.value.length === 0) {\r\n          dispatch({ type: 'CLEAN_QUERY' })\r\n          return\r\n        }\r\n  \r\n        const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n        const isMatch = (result) => re.test(result.name)\r\n  \r\n        dispatch({\r\n          type: 'FINISH_SEARCH',\r\n          results: _.filter(pokemons, isMatch),\r\n        })\r\n      }, 300)\r\n    }, [])\r\n    React.useEffect(() => {\r\n      return () => {\r\n        clearTimeout(timeoutRef.current)\r\n      }\r\n    }, [])\r\n  \r\n    return (\r\n        <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n            width:100%;\r\n\r\n        `}>\r\n            <div className={css`\r\n            display:flex;                    \r\n            align-items:center;\r\n            justify-content:flex-end;\r\n            padding: 1% 0;\r\n        `}>\r\n                <Search\r\n                loading={loading}\r\n                onResultSelect={(e, data) =>dispatch({ type: 'UPDATE_SELECTION', selection: data.result.name })}\r\n                onSearchChange={handleSearchChange}\r\n                resultRenderer={resultRenderer}\r\n                results={results}\r\n                value={value}\r\n                icon={null}\r\n                size=\"small\"/>\r\n                <div className={css`\r\n                    position:absolute;\r\n                `}>\r\n                    <Icon \r\n                    className={css`cursor:pointer;`}\r\n                    onClick={()=>{\r\n                        setDisplayPokemon(pokemons.filter((pokemon)=>{\r\n                            return pokemon.name.includes(searchString);\r\n                        }));\r\n                    }} name='search'/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n        \r\n    )\r\n  }\r\n\r\n\r\n    return (\r\n        \r\n        <div id=\"list-page\">\r\n            <SearchPokemon/>            \r\n            <Card.Group doubling itemsPerRow={8} className={\"card-container \"+css`\r\n              height:100vw;\r\n              \r\n              `}>\r\n                {displayPokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n        \r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchPage","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\PokemonDetailPage\\PokemonDetail.jsx",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { css } from '@emotion/css';\r\nimport { divide } from 'lodash-es';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Button, Container, Divider, Dropdown, Grid, Header, Icon, Image, List, Menu, Segment, Table } from 'semantic-ui-react';\r\nimport './PokemonDetail.scss';\r\n\r\nfunction PokemonDetail(){\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    let{name}=useParams();\r\n    // const [pokemon,setPokemon]=useState();\r\n\r\n    const POKEMON_QUERY=gql`\r\n      query pokemon($name: String!) {\r\n          pokemon(name: $name) {\r\n            id\r\n            name\r\n            types{\r\n              type{\r\n                name\r\n              }\r\n            }\r\n            \r\n\t\theight\r\n    weight\r\n    abilities{\r\n      ability{\r\n        name\r\n      }\r\n    }\r\n            sprites {\r\n              front_default\r\n              front_shiny\r\n              back_default\r\n              back_shiny\r\n            }        \r\n            stats{\r\n              base_stat\r\n\r\n              stat{\r\n                name\r\n              }\r\n              \r\n            }\r\n            moves {\r\n              move {\r\n                name\r\n              }\r\n            }\r\n            types {\r\n              type {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    `;\r\n    const{loading , error, data}=useQuery(POKEMON_QUERY,{\r\n      variables:{\r\n          name:name\r\n      }\r\n    });\r\n    \r\n\r\n    // var mobile = (width <= 768);\r\n    if(loading)return(\r\n      <div></div>\r\n    );\r\n    console.log(data);\r\n    let pokemon=data.pokemon;\r\n    return(\r\n      <div className={css`\r\n        display:flex;\r\n        width:100%;\r\n        height:100%;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        justify-content:center;\r\n      `}>\r\n        \r\n        <div className=\"image-container\">\r\n          <img src={pokemon.sprites.front_default} alt=\"Failed to load\" />\r\n          <img src={pokemon.sprites.front_shiny} alt=\"Failed to load\" />\r\n        </div>\r\n      <div className=\"tables-container\">\r\n        <Table celled>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell><h3>Attributes</h3></Table.HeaderCell>\r\n                <Table.HeaderCell><h3>Description</h3></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' image >\r\n                        \r\n                    <Header.Content>\r\n                      <h3>Pokemon</h3>\r\n                      \r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                <h3 className={css`display:flex;`}>{pokemon.name}\r\n                              {pokemon.types?.map((type)=>{\r\n                            return (\r\n                            <div className={type.type.name+' '+css`\r\n                              padding: 0 2vw;\r\n                              display:flex;\r\n                              color:var(--txt-sec);\r\n                              justify-content:center;\r\n                              \r\n                              margin: 0 0 0 5px ;\r\n                              font-size:min(max(0.8rem, 2vw), 18px);\r\n                            `}>\r\n\r\n                              {type.type.name}\r\n                            </div>)\r\n                        })}\r\n                      </h3>\r\n                  </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4'>\r\n                    <Header.Content>\r\n                      <h3>\r\n                        Abilities\r\n                      </h3>\r\n\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                <h3 className={css`display:flex;`}>\r\n                              {pokemon.abilities?.map((ability)=>{\r\n                            return (\r\n                            <div className={css`\r\n                              padding: 0 2vw;\r\n                              display:flex;\r\n                              background-color:var(--bg-surface);\r\n                              justify-content:center;\r\n                              margin: 0 5px 0 0 ;\r\n                              font-size:min(max(0.6rem, 1.6vw), 14px);\r\n\r\n                            `}>\r\n                              {ability.ability.name} \r\n                            </div>)\r\n                        })}\r\n                      </h3>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4' >\r\n                    <Header.Content>\r\n                    <h3>Height</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.height}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>Weight</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.weight}</h3></Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n          <Table celled >\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell><h3>Stats</h3></Table.HeaderCell>\r\n                <Table.HeaderCell><h3>Value</h3></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' image >\r\n                        \r\n                    <Header.Content>\r\n                      <h3>{pokemon.stats[0].stat.name}</h3>\r\n                      \r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[0].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4'>\r\n                    <Header.Content>\r\n                      <h3>\r\n                      {pokemon.stats[1].stat.name}\r\n                      </h3>\r\n\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[1].base_stat}</h3>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[2].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[2].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[3].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[3].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[4].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[4].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[5].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[5].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n          <div className={css`\r\n            \r\n          `}>\r\n          </div>\r\n        </div>\r\n        \r\n        </div>\r\n    );  \r\n    \r\n}\r\n\r\nexport default PokemonDetail\r\n\r\n","C:\\Users\\User\\Documents\\0. JP20-2\\Post Training\\reactjs\\JPokedex\\jpokedex\\src\\Pages\\FavPage\\FavPage.jsx",["106","107","108","109","110","111","112","113","114","115","116","117","118"],"import React,{useState, useEffect} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './FavPage.scss';\r\nimport { Card,  Grid,  Header,  Label,  Pagination,  Placeholder, Search, Segment } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { css } from \"@emotion/css\";\r\nfunction FavPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons{\r\n        pokemons(limit: 9999, offset: 0) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n    function test(){\r\n        var row=[];\r\n    \r\n        for(let i=0;i<localStorage.length;i++){\r\n        \r\n            row.push(<PokemonCard pokemon='loading'/>);\r\n        }\r\n        return row;\r\n    }\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    {\r\n        test()\r\n    }\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    \r\n        </div>\r\n\r\n</div>;\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    let temp=localStorage.getItem(pokemon.name);\r\n                    \r\n                    if(temp!=null){\r\n                        return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                    }\r\n                    else {\r\n                        <>;</>\r\n                    }\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default FavPage\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":34,"nodeType":"125","messageId":"126","endLine":2,"endColumn":39},{"ruleId":"123","severity":1,"message":"127","line":2,"column":41,"nodeType":"125","messageId":"126","endLine":2,"endColumn":47},{"ruleId":"123","severity":1,"message":"128","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":16},{"ruleId":"123","severity":1,"message":"129","line":1,"column":18,"nodeType":"125","messageId":"126","endLine":1,"endColumn":27},{"ruleId":"123","severity":1,"message":"130","line":1,"column":29,"nodeType":"125","messageId":"126","endLine":1,"endColumn":33},{"ruleId":"123","severity":1,"message":"131","line":1,"column":35,"nodeType":"125","messageId":"126","endLine":1,"endColumn":42},{"ruleId":"123","severity":1,"message":"132","line":1,"column":44,"nodeType":"125","messageId":"126","endLine":1,"endColumn":54},{"ruleId":"123","severity":1,"message":"133","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"134","line":3,"column":15,"nodeType":"125","messageId":"126","endLine":3,"endColumn":17},{"ruleId":"123","severity":1,"message":"133","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},{"ruleId":"123","severity":1,"message":"134","line":1,"column":15,"nodeType":"125","messageId":"126","endLine":1,"endColumn":17},{"ruleId":"123","severity":1,"message":"135","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":18},{"ruleId":"123","severity":1,"message":"136","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"137","line":4,"column":23,"nodeType":"125","messageId":"126","endLine":4,"endColumn":29},{"ruleId":"123","severity":1,"message":"128","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":16},{"ruleId":"123","severity":1,"message":"128","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"138","line":1,"column":25,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"123","severity":1,"message":"139","line":6,"column":17,"nodeType":"125","messageId":"126","endLine":6,"endColumn":21},{"ruleId":"123","severity":1,"message":"140","line":6,"column":24,"nodeType":"125","messageId":"126","endLine":6,"endColumn":30},{"ruleId":"123","severity":1,"message":"141","line":6,"column":33,"nodeType":"125","messageId":"126","endLine":6,"endColumn":38},{"ruleId":"123","severity":1,"message":"142","line":6,"column":54,"nodeType":"125","messageId":"126","endLine":6,"endColumn":65},{"ruleId":"123","severity":1,"message":"143","line":6,"column":67,"nodeType":"125","messageId":"126","endLine":6,"endColumn":73},{"ruleId":"123","severity":1,"message":"131","line":6,"column":75,"nodeType":"125","messageId":"126","endLine":6,"endColumn":82},{"ruleId":"123","severity":1,"message":"144","line":32,"column":20,"nodeType":"125","messageId":"126","endLine":32,"endColumn":25},{"ruleId":"123","severity":1,"message":"145","line":90,"column":14,"nodeType":"125","messageId":"126","endLine":90,"endColumn":22},{"ruleId":"123","severity":1,"message":"146","line":94,"column":14,"nodeType":"125","messageId":"126","endLine":94,"endColumn":22},{"ruleId":"123","severity":1,"message":"138","line":1,"column":25,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"123","severity":1,"message":"139","line":6,"column":17,"nodeType":"125","messageId":"126","endLine":6,"endColumn":21},{"ruleId":"123","severity":1,"message":"140","line":6,"column":24,"nodeType":"125","messageId":"126","endLine":6,"endColumn":30},{"ruleId":"123","severity":1,"message":"147","line":6,"column":40,"nodeType":"125","messageId":"126","endLine":6,"endColumn":45},{"ruleId":"123","severity":1,"message":"142","line":6,"column":56,"nodeType":"125","messageId":"126","endLine":6,"endColumn":67},{"ruleId":"123","severity":1,"message":"131","line":6,"column":77,"nodeType":"125","messageId":"126","endLine":6,"endColumn":84},{"ruleId":"123","severity":1,"message":"144","line":36,"column":20,"nodeType":"125","messageId":"126","endLine":36,"endColumn":25},{"ruleId":"123","severity":1,"message":"148","line":82,"column":9,"nodeType":"125","messageId":"126","endLine":82,"endColumn":20},{"ruleId":"123","severity":1,"message":"149","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":16},{"ruleId":"123","severity":1,"message":"138","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":19},{"ruleId":"123","severity":1,"message":"128","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":16},{"ruleId":"123","severity":1,"message":"129","line":7,"column":18,"nodeType":"125","messageId":"126","endLine":7,"endColumn":27},{"ruleId":"123","severity":1,"message":"150","line":7,"column":29,"nodeType":"125","messageId":"126","endLine":7,"endColumn":36},{"ruleId":"123","severity":1,"message":"151","line":7,"column":38,"nodeType":"125","messageId":"126","endLine":7,"endColumn":46},{"ruleId":"123","severity":1,"message":"139","line":7,"column":48,"nodeType":"125","messageId":"126","endLine":7,"endColumn":52},{"ruleId":"123","severity":1,"message":"152","line":7,"column":62,"nodeType":"125","messageId":"126","endLine":7,"endColumn":66},{"ruleId":"123","severity":1,"message":"147","line":7,"column":68,"nodeType":"125","messageId":"126","endLine":7,"endColumn":73},{"ruleId":"123","severity":1,"message":"153","line":7,"column":75,"nodeType":"125","messageId":"126","endLine":7,"endColumn":79},{"ruleId":"123","severity":1,"message":"130","line":7,"column":81,"nodeType":"125","messageId":"126","endLine":7,"endColumn":85},{"ruleId":"123","severity":1,"message":"131","line":7,"column":87,"nodeType":"125","messageId":"126","endLine":7,"endColumn":94},{"ruleId":"123","severity":1,"message":"154","line":11,"column":12,"nodeType":"125","messageId":"126","endLine":11,"endColumn":17},{"ruleId":"123","severity":1,"message":"155","line":11,"column":19,"nodeType":"125","messageId":"126","endLine":11,"endColumn":27},{"ruleId":"123","severity":1,"message":"144","line":61,"column":21,"nodeType":"125","messageId":"126","endLine":61,"endColumn":26},{"ruleId":"123","severity":1,"message":"138","line":1,"column":25,"nodeType":"125","messageId":"126","endLine":1,"endColumn":34},{"ruleId":"123","severity":1,"message":"139","line":6,"column":17,"nodeType":"125","messageId":"126","endLine":6,"endColumn":21},{"ruleId":"123","severity":1,"message":"140","line":6,"column":24,"nodeType":"125","messageId":"126","endLine":6,"endColumn":30},{"ruleId":"123","severity":1,"message":"141","line":6,"column":33,"nodeType":"125","messageId":"126","endLine":6,"endColumn":38},{"ruleId":"123","severity":1,"message":"156","line":6,"column":41,"nodeType":"125","messageId":"126","endLine":6,"endColumn":51},{"ruleId":"123","severity":1,"message":"142","line":6,"column":54,"nodeType":"125","messageId":"126","endLine":6,"endColumn":65},{"ruleId":"123","severity":1,"message":"143","line":6,"column":67,"nodeType":"125","messageId":"126","endLine":6,"endColumn":73},{"ruleId":"123","severity":1,"message":"131","line":6,"column":75,"nodeType":"125","messageId":"126","endLine":6,"endColumn":82},{"ruleId":"123","severity":1,"message":"133","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":13},{"ruleId":"123","severity":1,"message":"144","line":32,"column":20,"nodeType":"125","messageId":"126","endLine":32,"endColumn":25},{"ruleId":"123","severity":1,"message":"145","line":61,"column":14,"nodeType":"125","messageId":"126","endLine":61,"endColumn":22},{"ruleId":"123","severity":1,"message":"146","line":65,"column":14,"nodeType":"125","messageId":"126","endLine":65,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":73,"column":39,"nodeType":"159","messageId":"160","endLine":73,"endColumn":41},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Menu' is defined but never used.","'Segment' is defined but never used.","'Visibility' is defined but never used.","'css' is defined but never used.","'cx' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'useEffect' is defined but never used.","'Grid' is defined but never used.","'Header' is defined but never used.","'Label' is defined but never used.","'Placeholder' is defined but never used.","'Search' is defined but never used.","'error' is assigned a value but never used.","'nextPage' is defined but never used.","'prevPage' is defined but never used.","'Image' is defined but never used.","'searchValue' is assigned a value but never used.","'divide' is defined but never used.","'Divider' is defined but never used.","'Dropdown' is defined but never used.","'Icon' is defined but never used.","'List' is defined but never used.","'width' is assigned a value but never used.","'setWidth' is assigned a value but never used.","'Pagination' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]