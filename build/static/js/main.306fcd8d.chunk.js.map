{"version":3,"sources":["Components/PokemonCard/PokemonCard.jsx","Pages/FavPage/FavPage.jsx","Pages/ListPage/ListPage.jsx","Pages/PokemonDetailPage/PokemonDetail.jsx","Pages/SearchPage/SearchPage.jsx","Pages/PageEntry/Mobile.jsx","Pages/PageEntry/Desktop.jsx","Pages/PageEntry/Entry.jsx","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","props","useState","loaded","setLoaded","like","setLike","poke","pokemon","loading","liked","localStorage","getItem","name","className","style","textDecoration","Card","css","Placeholder","Image","square","to","src","image","onLoad","alt","Content","Header","Line","length","Icon","color","onClick","removeItem","setItem","FavPage","page","POKEMON_QUERY","gql","useQuery","variables","limit","offset","data","error","id","Group","doubling","itemsPerRow","row","i","push","test","Math","round","pokemons","count","results","map","ListPage","maxPage","setPage","Pagination","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","onPageChange","e","totalPages","activePage","PokemonDetail","window","innerWidth","useParams","console","log","sprites","front_default","front_shiny","Table","celled","Row","HeaderCell","Body","Cell","as","types","type","abilities","ability","height","weight","stats","stat","base_stat","SearchPage","displayPokemons","setDisplayPokemon","searchString","Search","icon","size","filter","includes","initialState","value","searchReducer","state","action","query","selection","Error","resultRenderer","Label","content","SearchPokemon","React","useReducer","dispatch","timeoutRef","useRef","handleSearchChange","useCallback","clearTimeout","current","setTimeout","re","RegExp","_","escapeRegExp","result","useEffect","onResultSelect","onSearchChange","Mobile","sidebarOpened","setSidebar","Sidebar","Pushable","Menu","animation","inverted","onHide","vertical","visible","width","Item","href","Pusher","dimmed","Segment","textAlign","minHeight","padding","Container","pointing","secondary","path","Desktop","fixed","setFixed","Visibility","once","onBottomPassed","onBottomPassedReverse","active","Entry","setWidth","handleWindowSizeChange","addEventListener","removeEventListener","isMobile","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.306fcd8d.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\nimport './PokemonCard.scss';\r\nimport { Card, Icon, Image, Placeholder } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { useState } from 'react';\r\nimport { css } from '@emotion/css';\r\nfunction PokemonCard(props){\r\n\r\n    const [loaded,setLoaded]=useState(false);\r\n    const [like,setLike]=useState(false);\r\n    \r\n    let poke=props.pokemon;\r\n    let loading=poke==='loading';\r\n    \r\n    \r\n    let liked=false;\r\n    if(!loading){\r\n        liked=localStorage.getItem(poke.name)!=null;\r\n    }\r\n    \r\n\r\n    return (\r\n    <div className=\"card bg-surface \"key={poke.name} style={{ textDecoration:'none'}}>\r\n        <Card key={poke.name} className={\"full bg-surface \"+css`\r\n            overflow:hidden;\r\n\r\n        `}>\r\n            {!loaded||loading?<Placeholder className='ph-image'>\r\n            <Placeholder.Image square className='ph-image'/>\r\n            </Placeholder>:<div></div>\r\n            }\r\n            {loading?<div></div>:\r\n                <div className={'poke-image '+css`\r\n                    \r\n                `}>\r\n                    <Link  to={`./pokemon/${poke.name}`} >\r\n                    <Image src={poke.image}  onLoad={()=>setLoaded(true)} className='poke-image'  alt='Failed to load'/>\r\n                    </Link>\r\n                    \r\n                </div>\r\n            }\r\n            <Card.Content className=\"bg-surface full center-flex\">\r\n            {loading?\r\n                        <Placeholder className=\"ph center-flex\">\r\n                            <Placeholder.Header className=\"ph center-flex\">\r\n                                <Placeholder.Line className=\"ph center-flex\" length='long' />\r\n                            </Placeholder.Header>\r\n                        </Placeholder>\r\n                        :\r\n                        <div className=\"full txt-primary center-flex\">\r\n                            <Card.Header className=\"full center-flex\"><h4>{poke.name}</h4></Card.Header>\r\n\r\n                                <div className={css`\r\n                            \r\n                        `} >\r\n\r\n                            {\r\n                                loading?<></>:<Icon name='like' color={like||liked?\"red\":\"grey\"} className={css`\r\n                                \r\n                                `} onClick={()=>{\r\n                                    if(!liked&&!like){\r\n                                        localStorage.setItem(poke.name,0);                                        \r\n                                    }else{\r\n                                        localStorage.removeItem(poke.name);\r\n                                    }\r\n    \r\n                                    setLike(!like);\r\n    \r\n                                }} />\r\n                            }\r\n                        </div>\r\n                        </div> \r\n                    }\r\n                </Card.Content>\r\n            </Card>\r\n        </div>\r\n   \r\n    \r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default PokemonCard","import React,{useState} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './FavPage.scss';\r\nimport { Card} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nfunction FavPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons{\r\n        pokemons(limit: 9999, offset: 0) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n    function test(){\r\n        var row=[];\r\n    \r\n        for(let i=0;i<localStorage.length;i++){\r\n        \r\n            row.push(<PokemonCard pokemon='loading'/>);\r\n        }\r\n        return row;\r\n    }\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    {\r\n        test()\r\n    }\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    \r\n        </div>\r\n\r\n</div>;\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    let temp=localStorage.getItem(pokemon.name);\r\n                    \r\n                    if(temp!=null){\r\n                        return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                    }\r\n                    else {\r\n                        <>;</>\r\n                    }\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default FavPage\r\n\r\n\r\n\r\n\r\n\r\n","import React,{useState} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './ListPage.scss';\r\nimport { Card, Pagination} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { css } from \"@emotion/css\";\r\nfunction ListPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons($limit: Int, $offset: Int){\r\n        pokemons(limit: $limit, offset: $offset) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    <PokemonCard pokemon='loading'/>\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={1}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={1}\r\n                onPageChange={(e,page)=>{}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n\r\n</div>;\r\n\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                })}\r\n            </Card.Group>\r\n\r\n\r\n\r\n            <div  className={\"center-flex \" + css`display:flex; align-items:flex-start;height:20vh;`}>\r\n            <Pagination\r\n                boundaryRange={0}\r\n                defaultActivePage={page}\r\n                ellipsisItem={null}\r\n                firstItem={null}\r\n                lastItem={null}\r\n                siblingRange={3}\r\n                onPageChange={(e,page)=>{\r\n                    setPage(page.activePage);}}\r\n                totalPages={maxPage}\r\n            />\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ListPage\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { css } from '@emotion/css';\r\nimport {  useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport {  Header,  Table } from 'semantic-ui-react';\r\nimport './PokemonDetail.scss';\r\n\r\nfunction PokemonDetail(){\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    let{name}=useParams();\r\n    // const [pokemon,setPokemon]=useState();\r\n\r\n    const POKEMON_QUERY=gql`\r\n      query pokemon($name: String!) {\r\n          pokemon(name: $name) {\r\n            id\r\n            name\r\n            types{\r\n              type{\r\n                name\r\n              }\r\n            }\r\n            \r\n\t\theight\r\n    weight\r\n    abilities{\r\n      ability{\r\n        name\r\n      }\r\n    }\r\n            sprites {\r\n              front_default\r\n              front_shiny\r\n              back_default\r\n              back_shiny\r\n            }        \r\n            stats{\r\n              base_stat\r\n\r\n              stat{\r\n                name\r\n              }\r\n              \r\n            }\r\n            moves {\r\n              move {\r\n                name\r\n              }\r\n            }\r\n            types {\r\n              type {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n    `;\r\n    const{loading , error, data}=useQuery(POKEMON_QUERY,{\r\n      variables:{\r\n          name:name\r\n      }\r\n    });\r\n    \r\n\r\n    // var mobile = (width <= 768);\r\n    if(loading)return(\r\n      <div></div>\r\n    );\r\n    console.log(data);\r\n    let pokemon=data.pokemon;\r\n    return(\r\n      <div className={css`\r\n        display:flex;\r\n        width:100%;\r\n        height:100%;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        justify-content:center;\r\n      `}>\r\n        \r\n        <div className=\"image-container\">\r\n          <img src={pokemon.sprites.front_default} alt=\"Failed to load\" />\r\n          <img src={pokemon.sprites.front_shiny} alt=\"Failed to load\" />\r\n        </div>\r\n      <div className=\"tables-container\">\r\n        <Table celled>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell><h3>Attributes</h3></Table.HeaderCell>\r\n                <Table.HeaderCell><h3>Description</h3></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' image >\r\n                        \r\n                    <Header.Content>\r\n                      <h3>Pokemon</h3>\r\n                      \r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                <h3 className={css`display:flex;`}>{pokemon.name}\r\n                              {pokemon.types?.map((type)=>{\r\n                            return (\r\n                            <div className={type.type.name+' '+css`\r\n                              padding: 0 2vw;\r\n                              display:flex;\r\n                              color:var(--txt-sec);\r\n                              justify-content:center;\r\n                              \r\n                              margin: 0 0 0 5px ;\r\n                              font-size:min(max(0.8rem, 2vw), 18px);\r\n                            `}>\r\n\r\n                              {type.type.name}\r\n                            </div>)\r\n                        })}\r\n                      </h3>\r\n                  </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4'>\r\n                    <Header.Content>\r\n                      <h3>\r\n                        Abilities\r\n                      </h3>\r\n\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                <h3 className={css`display:flex;`}>\r\n                              {pokemon.abilities?.map((ability)=>{\r\n                            return (\r\n                            <div className={css`\r\n                              padding: 0 2vw;\r\n                              display:flex;\r\n                              background-color:var(--bg-surface);\r\n                              justify-content:center;\r\n                              margin: 0 5px 0 0 ;\r\n                              font-size:min(max(0.6rem, 1.6vw), 14px);\r\n\r\n                            `}>\r\n                              {ability.ability.name} \r\n                            </div>)\r\n                        })}\r\n                      </h3>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4' >\r\n                    <Header.Content>\r\n                    <h3>Height</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.height}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>Weight</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.weight}</h3></Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n          <Table celled >\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell><h3>Stats</h3></Table.HeaderCell>\r\n                <Table.HeaderCell><h3>Value</h3></Table.HeaderCell>\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' image >\r\n                        \r\n                    <Header.Content>\r\n                      <h3>{pokemon.stats[0].stat.name}</h3>\r\n                      \r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[0].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4'>\r\n                    <Header.Content>\r\n                      <h3>\r\n                      {pokemon.stats[1].stat.name}\r\n                      </h3>\r\n\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[1].base_stat}</h3>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header  as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[2].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[2].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[3].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[3].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[4].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[4].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>\r\n                  <Header as='h4' >\r\n                    <Header.Content>\r\n                    <h3>{pokemon.stats[5].stat.name}</h3>\r\n                    </Header.Content>\r\n                  </Header>\r\n                </Table.Cell>\r\n                <Table.Cell><h3>{pokemon.stats[5].base_stat}</h3></Table.Cell>\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n          <div className={css`\r\n            \r\n          `}>\r\n          </div>\r\n        </div>\r\n        \r\n        </div>\r\n    );  \r\n    \r\n}\r\n\r\nexport default PokemonDetail\r\n\r\n","import React,{useState, useEffect} from \"react\"\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './SearchPage.scss';\r\nimport { Card,  Grid,  Header,  Icon,  Image,  Label,  Placeholder, Search, Segment } from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { css } from \"@emotion/css\";\r\nimport _ from \"lodash\";\r\n\r\n\r\nfunction SearchPage(){\r\n\r\n    \r\n    const [displayPokemons, setDisplayPokemon]=useState([]);\r\n    \r\n    var maxPage;\r\n    let searchString='';\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons {\r\n        pokemons(limit: 999999, offset: 0) {\r\n          count\r\n          next\r\n          previous\r\n          status\r\n          message\r\n          results {\r\n            url\r\n            name\r\n            image\r\n          }\r\n        }\r\n      }\r\n    `\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n\r\n    })\r\n\r\n    if(loading)return <div id=\"list-page\" >\r\n     <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n            width:100%;\r\n\r\n            \r\n        `}>\r\n            <div className={css`\r\n            display:flex;                    \r\n            align-items:center;\r\n            justify-content:flex-end;\r\n            padding: 1% 0;\r\n        `}>\r\n                <Search\r\n                onClick={()=>{}}\r\n                icon={null}\r\n                size=\"small\"/>\r\n                <div className={css`\r\n                    position:absolute;\r\n                `}>\r\n                    <Icon \r\n                    className={css`cursor:pointer;`}\r\n                    onClick={()=>{\r\n                        setDisplayPokemon(pokemons.filter((pokemon)=>{\r\n                            return pokemon.name.includes(searchString);\r\n                        }));\r\n                    }} name='search'/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n</div>\r\n    \r\n   \r\n    maxPage=Math.round(data.pokemons.count/18);\r\n    console.log(maxPage);\r\n    console.log(data);\r\n    let pokemons=data.pokemons.results;\r\n    let searchValue=''\r\n    const initialState = {\r\n        loading: false,\r\n        results: [],\r\n        value: '',\r\n    };\r\n    function searchReducer(state, action) {\r\n        switch (action.type) {\r\n          case 'CLEAN_QUERY':\r\n            return initialState\r\n          case 'START_SEARCH':\r\n            return { ...state, loading: true, value: action.query }\r\n          case 'FINISH_SEARCH':\r\n            return { ...state, loading: false, results: action.results }\r\n          case 'UPDATE_SELECTION':\r\n            searchString=action.selection;\r\n      \r\n            return { ...state, value: action.selection }\r\n          default:\r\n            throw new Error()\r\n        }\r\n      }\r\n      const resultRenderer = ({ name }) => <Label content={name} />\r\n      \r\n    function SearchPokemon() {\r\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\r\n    const { loading, results, value } = state\r\n    \r\n    const timeoutRef = React.useRef()\r\n    const handleSearchChange = React.useCallback((e, data) => {\r\n      clearTimeout(timeoutRef.current)\r\n      searchString=data.value;\r\n      dispatch({ type: 'START_SEARCH', query: data.value })\r\n  \r\n      timeoutRef.current = setTimeout(() => {\r\n        if (data.value.length === 0) {\r\n          dispatch({ type: 'CLEAN_QUERY' })\r\n          return\r\n        }\r\n  \r\n        const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n        const isMatch = (result) => re.test(result.name)\r\n  \r\n        dispatch({\r\n          type: 'FINISH_SEARCH',\r\n          results: _.filter(pokemons, isMatch),\r\n        })\r\n      }, 300)\r\n    }, [])\r\n    React.useEffect(() => {\r\n      return () => {\r\n        clearTimeout(timeoutRef.current)\r\n      }\r\n    }, [])\r\n  \r\n    return (\r\n        <div className={css`\r\n            display:flex;\r\n            align-items:center;\r\n            justify-content:center;\r\n            padding: 1% 0;\r\n            background-color: #1b1c1d;\r\n            width:100%;\r\n\r\n        `}>\r\n            <div className={css`\r\n            display:flex;                    \r\n            align-items:center;\r\n            justify-content:flex-end;\r\n            padding: 1% 0;\r\n        `}>\r\n                <Search\r\n                loading={loading}\r\n                onResultSelect={(e, data) =>dispatch({ type: 'UPDATE_SELECTION', selection: data.result.name })}\r\n                onSearchChange={handleSearchChange}\r\n                resultRenderer={resultRenderer}\r\n                results={results}\r\n                value={value}\r\n                icon={null}\r\n                size=\"small\"/>\r\n                <div className={css`\r\n                    position:absolute;\r\n                `}>\r\n                    <Icon \r\n                    className={css`cursor:pointer;`}\r\n                    onClick={()=>{\r\n                        setDisplayPokemon(pokemons.filter((pokemon)=>{\r\n                            return pokemon.name.includes(searchString);\r\n                        }));\r\n                    }} name='search'/>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n        \r\n    )\r\n  }\r\n\r\n\r\n    return (\r\n        \r\n        <div id=\"list-page\">\r\n            <SearchPokemon/>            \r\n            <Card.Group doubling itemsPerRow={8} className={\"card-container \"+css`\r\n              height:100vw;\r\n              \r\n              `}>\r\n                {displayPokemons?.map(pokemon=>{\r\n                    return <PokemonCard key={pokemon.name} pokemon={pokemon}/>\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n        \r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default SearchPage","import { useState } from \"react\";\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport {  Container, Icon, Menu, Segment, Sidebar } from \"semantic-ui-react\";\r\nimport FavPage from '../FavPage/FavPage';\r\nimport ListPage from '../ListPage/ListPage';\r\nimport PokemonDetail from '../PokemonDetailPage/PokemonDetail';\r\nimport SearchPage from '../SearchPage/SearchPage';\r\n\r\n\r\n\r\nfunction Mobile(){\r\n\r\n    const [sidebarOpened,setSidebar]=useState(false);\r\n\r\n    function handleSidebarHide ()  {\r\n        setSidebar(false)\r\n    }\r\n\r\n    function handleToggle ()  {\r\n        setSidebar(true)\r\n    }\r\n    return (\r\n      \r\n      <Sidebar.Pushable>\r\n      \r\n       <Sidebar\r\n       as={Menu}\r\n       animation='overlay'\r\n       inverted\r\n       onHide={handleSidebarHide}\r\n       vertical\r\n       visible={sidebarOpened}\r\n       width='thin'\r\n       \r\n\r\n       \r\n     >\r\n\r\n       <Menu.Item as='a' href='./'>List</Menu.Item>\r\n       <Menu.Item as='a' href='./search'>Search</Menu.Item>        \r\n       <Menu.Item as='a' href='./favorites'>Favorites</Menu.Item>\r\n     </Sidebar>\r\n\r\n     \r\n\r\n     <Sidebar.Pusher dimmed={sidebarOpened}>\r\n       <Segment\r\n         inverted\r\n         textAlign='center'\r\n         style={{ minHeight: 80, padding: '1em 0em' }}\r\n         vertical\r\n         color='black'\r\n       >\r\n         <Container>\r\n           <Menu inverted pointing secondary size='large'>\r\n\r\n             <Menu.Item onClick={handleToggle}>\r\n             <Icon name='sidebar' />\r\n             </Menu.Item>\r\n\r\n           </Menu>\r\n         </Container>\r\n       </Segment>\r\n         <Switch>\r\n\r\n         <Route path='/favourites'>\r\n           \r\n           <FavPage/>\r\n         </Route>\r\n         <Route path='/pokemon/:name'>\r\n           <PokemonDetail/>\r\n           \r\n         </Route>\r\n         <Route path='/search'>\r\n         \r\n           <SearchPage/>\r\n        \r\n\r\n         </Route>\r\n         <Route path='/'>\r\n           <ListPage/>\r\n         </Route>\r\n       </Switch>\r\n     </Sidebar.Pusher>\r\n   </Sidebar.Pushable>\r\n   \r\n    \r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Mobile","import { useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport {  Container, Menu, Segment, Visibility } from \"semantic-ui-react\";\r\nimport FavPage from \"../FavPage/FavPage\";\r\nimport ListPage from \"../ListPage/ListPage\";\r\nimport PokemonDetail from \"../PokemonDetailPage/PokemonDetail\";\r\nimport SearchPage from \"../SearchPage/SearchPage\";\r\n\r\n\r\nfunction Desktop(){\r\n\r\n    const [fixed,setFixed]=useState(false);\r\n\r\n    function hideFixedMenu ()  {\r\n        setFixed(false)\r\n        \r\n    }\r\n\r\n    function showFixedMenu ()  {\r\n        setFixed(true)\r\n        \r\n    }\r\n    return (\r\n    <div>\r\n      <Visibility\r\n      once={false}\r\n      onBottomPassed={showFixedMenu}\r\n      onBottomPassedReverse={hideFixedMenu}\r\n    >\r\n      <Segment\r\n        inverted\r\n        textAlign='center'\r\n        style={{ minHeight: 80, padding: '1em 0em' }}\r\n        vertical\r\n      >\r\n        <Menu\r\n          fixed={fixed ? 'top' : null}\r\n          inverted={!fixed}\r\n          pointing={!fixed}\r\n          secondary={!fixed}\r\n          size='large'\r\n        >\r\n          <Container>\r\n            <Switch>\r\n              \r\n            <Route path='/pokemon'>\r\n              <Menu.Item as='a' href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            <Route path='/favorites'>\r\n              <Menu.Item as='a' href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' active href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            <Route path='/search'>\r\n              <Menu.Item as='a' href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' active href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            <Route path='/'>\r\n              <Menu.Item as='a' active href='../'>List</Menu.Item>\r\n              <Menu.Item as='a' href='../search'>Search</Menu.Item>\r\n              <Menu.Item as='a' href='../favorites'>Favorites</Menu.Item>\r\n            </Route>\r\n            \r\n          </Switch>\r\n          </Container>\r\n        </Menu>\r\n      </Segment>\r\n      \r\n    </Visibility>\r\n      <Switch>\r\n          <Route path='/favorites'>\r\n            <FavPage/>\r\n          </Route>\r\n          <Route path='/pokemon/:name'>\r\n            <PokemonDetail/>\r\n          </Route>\r\n          <Route path='/search'>\r\n            <SearchPage/>\r\n          </Route>\r\n          <Route path='/'>\r\n            <ListPage/>\r\n          </Route>\r\n          \r\n        </Switch>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Desktop","import { useEffect, useState } from \"react\";\r\nimport Mobile from \"./Mobile\";\r\nimport Desktop from \"./Desktop\";\r\n\r\nfunction Entry(){\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n\r\n    let isMobile = (width <= 768);\r\n    return (\r\n    <div>\r\n        {isMobile?\r\n           <Mobile/>\r\n \r\n        :<Desktop/>}\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Entry","import './App.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Entry from './Pages/PageEntry/Entry';\n\nfunction App() {\n  return (\n    <Router>\n      <Entry/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider\n} from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\n  cache: new InMemoryCache()\n})\nReactDOM.render(\n  <React.StrictMode>\n    \n    <ApolloProvider client={client}>\n    <App />\n\n    </ApolloProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}