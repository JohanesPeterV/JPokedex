{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState}from\"react\";import{gql,useQuery}from'@apollo/client';import PokemonCard from\"../../Components/PokemonCard/PokemonCard\";import'./FavPage.scss';import{Card}from\"semantic-ui-react\";import'semantic-ui-css/semantic.min.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function FavPage(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var maxPage;var POKEMON_QUERY=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    query pokemons{\\n        pokemons(limit: 9999, offset: 0) {\\n            count\\n            next\\n            previous\\n            status\\n            message\\n            results {\\n              url\\n              name\\n              image\\n            }\\n          }\\n      }\\n    \"])));var _useQuery=useQuery(POKEMON_QUERY,{variables:{limit:30,offset:page*30}}),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;function test(){var row=[];for(var i=0;i<localStorage.length;i++){row.push(/*#__PURE__*/_jsx(PokemonCard,{pokemon:\"loading\"}));}return row;}if(loading)return/*#__PURE__*/_jsxs(\"div\",{id:\"list-page\",children:[/*#__PURE__*/_jsx(Card.Group,{doubling:true,itemsPerRow:8,className:\"card-container\",children:test()}),/*#__PURE__*/_jsx(\"div\",{className:\"center-flex\"})]});maxPage=Math.round(data.pokemons.count/30);var pokemons=data.pokemons.results;function nextPage(){if(page<maxPage)setPage(page+1);}function prevPage(){if(page>0)setPage(page+1);}return/*#__PURE__*/_jsx(\"div\",{id:\"list-page\",children:/*#__PURE__*/_jsx(Card.Group,{doubling:true,itemsPerRow:8,className:\"card-container\",children:pokemons===null||pokemons===void 0?void 0:pokemons.map(function(pokemon){var temp=localStorage.getItem(pokemon.name);if(temp!=null){return/*#__PURE__*/_jsx(PokemonCard,{pokemon:pokemon},pokemon.name);}else{/*#__PURE__*/_jsx(_Fragment,{children:\";\"});}})})});}export default FavPage;","map":{"version":3,"sources":["C:/Users/User/Documents/0. JP20-2/Post Training/reactjs/JPokedex/jpokedex/src/Pages/FavPage/FavPage.jsx"],"names":["React","useState","gql","useQuery","PokemonCard","Card","FavPage","page","setPage","maxPage","POKEMON_QUERY","variables","limit","offset","loading","error","data","test","row","i","localStorage","length","push","Math","round","pokemons","count","results","nextPage","prevPage","map","pokemon","temp","getItem","name"],"mappings":"4VAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CAEA,OAAQC,GAAR,CAAaC,QAAb,KAA4B,gBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,0CAAxB,CACA,MAAO,gBAAP,CACA,OAASC,IAAT,KAAoB,mBAApB,CACA,MAAO,kCAAP,C,6IACA,QAASC,CAAAA,OAAT,EAAkB,CAGd,cAAsBL,QAAQ,CAAC,CAAD,CAA9B,wCAAOM,IAAP,eAAaC,OAAb,eAEA,GAAIC,CAAAA,OAAJ,CACA,GAAMC,CAAAA,aAAa,CAACR,GAAD,oWAAnB,CAiBA,cAA4BC,QAAQ,CAACO,aAAD,CAAe,CAC/CC,SAAS,CAAC,CACNC,KAAK,CAAC,EADA,CAENC,MAAM,CAACN,IAAI,CAAC,EAFN,CADqC,CAAf,CAApC,CAAMO,OAAN,WAAMA,OAAN,CAAeC,KAAf,WAAeA,KAAf,CAAsBC,IAAtB,WAAsBA,IAAtB,CAMA,QAASC,CAAAA,IAAT,EAAe,CACX,GAAIC,CAAAA,GAAG,CAAC,EAAR,CAEA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACC,YAAY,CAACC,MAA3B,CAAkCF,CAAC,EAAnC,CAAsC,CAElCD,GAAG,CAACI,IAAJ,cAAS,KAAC,WAAD,EAAa,OAAO,CAAC,SAArB,EAAT,EACH,CACD,MAAOJ,CAAAA,GAAP,CACH,CACD,GAAGJ,OAAH,CAAW,mBAAO,aAAK,EAAE,CAAC,WAAR,wBAElB,KAAC,IAAD,CAAM,KAAN,EAAY,QAAQ,KAApB,CAAqB,WAAW,CAAE,CAAlC,CAAqC,SAAS,CAAC,gBAA/C,UAEIG,IAAI,EAFR,EAFkB,cAOd,YAAM,SAAS,CAAC,aAAhB,EAPc,GAAP,CAYXR,OAAO,CAACc,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACS,QAAL,CAAcC,KAAd,CAAoB,EAA/B,CAAR,CACA,GAAID,CAAAA,QAAQ,CAACT,IAAI,CAACS,QAAL,CAAcE,OAA3B,CACA,QAASC,CAAAA,QAAT,EAAmB,CACf,GAAGrB,IAAI,CAACE,OAAR,CACAD,OAAO,CAACD,IAAI,CAAC,CAAN,CAAP,CACH,CACD,QAASsB,CAAAA,QAAT,EAAmB,CACf,GAAGtB,IAAI,CAAC,CAAR,CAAUC,OAAO,CAACD,IAAI,CAAC,CAAN,CAAP,CACb,CAED,mBAEI,YAAK,EAAE,CAAC,WAAR,uBACI,KAAC,IAAD,CAAM,KAAN,EAAY,QAAQ,KAApB,CAAqB,WAAW,CAAE,CAAlC,CAAqC,SAAS,CAAC,gBAA/C,UACKkB,QADL,SACKA,QADL,iBACKA,QAAQ,CAAEK,GAAV,CAAc,SAAAC,OAAO,CAAE,CACpB,GAAIC,CAAAA,IAAI,CAACZ,YAAY,CAACa,OAAb,CAAqBF,OAAO,CAACG,IAA7B,CAAT,CAEA,GAAGF,IAAI,EAAE,IAAT,CAAc,CACV,mBAAO,KAAC,WAAD,EAAgC,OAAO,CAAED,OAAzC,EAAkBA,OAAO,CAACG,IAA1B,CAAP,CACH,CAFD,IAGK,CACD,4CACH,CACJ,CATA,CADL,EADJ,EAFJ,CAqBH,CAGD,cAAe5B,CAAAA,OAAf","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nimport {gql, useQuery} from '@apollo/client';\r\nimport PokemonCard from \"../../Components/PokemonCard/PokemonCard\";\r\nimport './FavPage.scss';\r\nimport { Card} from \"semantic-ui-react\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nfunction FavPage(){\r\n\r\n    \r\n    const [page, setPage]=useState(0);\r\n    \r\n    var maxPage;\r\n    const POKEMON_QUERY=gql`\r\n    query pokemons{\r\n        pokemons(limit: 9999, offset: 0) {\r\n            count\r\n            next\r\n            previous\r\n            status\r\n            message\r\n            results {\r\n              url\r\n              name\r\n              image\r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n    const{loading ,error, data}=useQuery(POKEMON_QUERY,{\r\n        variables:{\r\n            limit:30,\r\n            offset:page*30\r\n        }\r\n    });\r\n    function test(){\r\n        var row=[];\r\n    \r\n        for(let i=0;i<localStorage.length;i++){\r\n        \r\n            row.push(<PokemonCard pokemon='loading'/>);\r\n        }\r\n        return row;\r\n    }\r\n    if(loading)return <div id=\"list-page\">\r\n\r\n    <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n    {\r\n        test()\r\n    }\r\n    </Card.Group>\r\n        <div  className=\"center-flex\">\r\n    \r\n        </div>\r\n\r\n</div>;\r\n    maxPage=Math.round(data.pokemons.count/30);\r\n    let pokemons=data.pokemons.results;\r\n    function nextPage(){\r\n        if(page<maxPage)\r\n        setPage(page+1);\r\n    }\r\n    function prevPage(){\r\n        if(page>0)setPage(page+1);\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"list-page\">\r\n            <Card.Group doubling itemsPerRow={8} className=\"card-container\">\r\n                {pokemons?.map(pokemon=>{\r\n                    let temp=localStorage.getItem(pokemon.name);\r\n                    \r\n                    if(temp!=null){\r\n                        return <PokemonCard key={pokemon.name} pokemon={pokemon}/>;\r\n                    }\r\n                    else {\r\n                        <>;</>\r\n                    }\r\n                })}\r\n            </Card.Group>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default FavPage\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}